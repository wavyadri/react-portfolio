{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adria\\\\Documents\\\\coding projects\\\\adriana-portfolio-react\\\\src\\\\components\\\\Typewriter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Typewriter = () => {\n  _s();\n\n  let text = ['Web Developer', 'Problem Solver', 'Team Player'];\n  let word = []; // let textIndex = 0;\n\n  let i = 0;\n  let j = 0;\n  const [currentWord, setCurrentWord] = useState([]); // const charIndex = useRef(0);\n  // const textIndex = useRef(0);\n\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  function loop() {\n    setIsDeleting(false);\n    setCurrentWord(word.join(''));\n\n    if (textIndex < text.length) {\n      // if we're typing and we haven't completed the word\n      if (!isDeleting && j <= text[textIndex].length) {\n        word.push(text[textIndex][charIndex]);\n        charIndex++;\n        setCurrentWord(word.charIndexoin(''));\n      }\n\n      if (isDeleting && charIndex <= text[textIndex].length) {\n        word.pop(text[textIndex][charIndex]);\n        charIndex--;\n        setCurrentWord(word.join(''));\n      }\n\n      if (charIndex == text[textIndex].length) {\n        setIsDeleting(true);\n      }\n\n      if (isDeleting && charIndex === 0) {\n        word = [];\n        setIsDeleting(false);\n        textIndex++;\n\n        if (textIndex === word.length) {\n          textIndex = 0;\n        }\n      }\n    }\n  }\n\n  useEffect(() => {\n    setTimeout(() => loop(), 300); // return (() => {\n    //     clearTimeout(timeoutID);\n    // })\n  }, [currentWord, text]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: currentWord\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Typewriter, \"u9zz6xGpXjgYiIDvmpcSmsDuAO4=\");\n\n_c = Typewriter;\nexport default Typewriter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Typewriter\");","map":{"version":3,"sources":["C:/Users/adria/Documents/coding projects/adriana-portfolio-react/src/components/Typewriter.js"],"names":["React","useState","useEffect","useRef","Typewriter","text","word","i","j","currentWord","setCurrentWord","isDeleting","setIsDeleting","loop","join","textIndex","length","push","charIndex","charIndexoin","pop","setTimeout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,MAAIC,IAAI,GAAG,CAAC,eAAD,EAAkB,gBAAlB,EAAoC,aAApC,CAAX;AACA,MAAIC,IAAI,GAAG,EAAX,CAFqB,CAGrB;;AAEA,MAAIC,CAAC,GAAG,CAAR;AACA,MAAIC,CAAC,GAAG,CAAR;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C,CARqB,CASrB;AACA;;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;;AAEA,WAASY,IAAT,GAAiB;AACbD,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAF,IAAAA,cAAc,CAACJ,IAAI,CAACQ,IAAL,CAAU,EAAV,CAAD,CAAd;;AAEA,QAAIC,SAAS,GAAGV,IAAI,CAACW,MAArB,EAA6B;AACzB;AACA,UAAI,CAACL,UAAD,IAAeH,CAAC,IAAIH,IAAI,CAACU,SAAD,CAAJ,CAAgBC,MAAxC,EAAgD;AAC5CV,QAAAA,IAAI,CAACW,IAAL,CAAUZ,IAAI,CAACU,SAAD,CAAJ,CAAgBG,SAAhB,CAAV;AACAA,QAAAA,SAAS;AACTR,QAAAA,cAAc,CAACJ,IAAI,CAACa,YAAL,CAAkB,EAAlB,CAAD,CAAd;AACH;;AAED,UAAGR,UAAU,IAAIO,SAAS,IAAIb,IAAI,CAACU,SAAD,CAAJ,CAAgBC,MAA9C,EAAsD;AAClDV,QAAAA,IAAI,CAACc,GAAL,CAASf,IAAI,CAACU,SAAD,CAAJ,CAAgBG,SAAhB,CAAT;AACAA,QAAAA,SAAS;AACTR,QAAAA,cAAc,CAACJ,IAAI,CAACQ,IAAL,CAAU,EAAV,CAAD,CAAd;AACH;;AAED,UAAII,SAAS,IAAIb,IAAI,CAACU,SAAD,CAAJ,CAAgBC,MAAjC,EAAyC;AACrCJ,QAAAA,aAAa,CAAC,IAAD,CAAb;AACH;;AAED,UAAID,UAAU,IAAIO,SAAS,KAAK,CAAhC,EAAmC;AAC/BZ,QAAAA,IAAI,GAAG,EAAP;AACAM,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAG,QAAAA,SAAS;;AACT,YAAGA,SAAS,KAAKT,IAAI,CAACU,MAAtB,EAA8B;AAC1BD,UAAAA,SAAS,GAAG,CAAZ;AACH;AACJ;AACJ;AAEJ;;AAEDb,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,UAAU,CAAC,MAAMR,IAAI,EAAX,EAAe,GAAf,CAAV,CADY,CAEZ;AACA;AACA;AACH,GALQ,EAKN,CAACJ,WAAD,EAAcJ,IAAd,CALM,CAAT;AAQA,sBACI;AAAA,2BACI;AAAA,gBAAKI;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA7DD;;GAAML,U;;KAAAA,U;AA+DN,eAAeA,UAAf","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\n\r\nconst Typewriter = () => {\r\n    let text = ['Web Developer', 'Problem Solver', 'Team Player'];\r\n    let word = []\r\n    // let textIndex = 0;\r\n\r\n    let i = 0;\r\n    let j = 0;\r\n\r\n    const [currentWord, setCurrentWord] = useState([])\r\n    // const charIndex = useRef(0);\r\n    // const textIndex = useRef(0);\r\n    const [isDeleting, setIsDeleting] = useState(false)\r\n\r\n    function loop () {\r\n        setIsDeleting(false);\r\n        setCurrentWord(word.join(''))\r\n\r\n        if (textIndex < text.length) {\r\n            // if we're typing and we haven't completed the word\r\n            if (!isDeleting && j <= text[textIndex].length) {\r\n                word.push(text[textIndex][charIndex]);\r\n                charIndex++;\r\n                setCurrentWord(word.charIndexoin(''));\r\n            }\r\n\r\n            if(isDeleting && charIndex <= text[textIndex].length) {\r\n                word.pop(text[textIndex][charIndex]);\r\n                charIndex--;\r\n                setCurrentWord(word.join(''));\r\n            }\r\n\r\n            if (charIndex == text[textIndex].length) {\r\n                setIsDeleting(true);\r\n            }\r\n\r\n            if (isDeleting && charIndex === 0) {\r\n                word = [];\r\n                setIsDeleting(false);\r\n                textIndex++;\r\n                if(textIndex === word.length) {\r\n                    textIndex = 0;\r\n                }\r\n            }\r\n        }\r\n       \r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => loop(), 300)\r\n        // return (() => {\r\n        //     clearTimeout(timeoutID);\r\n        // })\r\n    }, [currentWord, text])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3>{currentWord}</h3>\r\n            {/* <h3>hello</h3> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Typewriter\r\n"]},"metadata":{},"sourceType":"module"}