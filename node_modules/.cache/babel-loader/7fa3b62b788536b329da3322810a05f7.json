{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adria\\\\Documents\\\\coding projects\\\\adriana-portfolio-react\\\\src\\\\components\\\\Typewriter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Typewriter = () => {\n  _s();\n\n  let text = ['Web Developer', 'Problem Solver', 'Team Player'];\n  let word = []; // let textIndex = 0;\n\n  let i = 0;\n  let j = 0;\n  const [currentWord, setCurrentWord] = useState('');\n  const charIndex = useRef(0);\n  const textIndex = useRef(0);\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  const loop = () => {\n    setIsDeleting(false);\n    setCurrentWord(word.join(''));\n\n    if (i < text.length) {\n      // if we're typing and we haven't completed the word\n      if (!isDeleting && j <= text[i].length) {\n        word.push(text[i][j]);\n        j++;\n        setCurrentWord(word.join(''));\n      }\n\n      if (isDeleting && j <= text[i].length) {\n        word.pop(text[i][j]);\n        j--;\n        setCurrentWord(word.join(''));\n      }\n\n      if (j == word[i].length) {\n        setIsDeleting(true);\n      }\n\n      if (isDeleting && j === 0) {\n        word = [];\n        setIsDeleting(false);\n        i++;\n      }\n    }\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      let i = 0;\n      let j = 0;\n      setCurrentWord(value => value + text[i].charAt(charIndex.current));\n      charIndex.current++;\n\n      if (currentWord === 'Web Developer') {\n        i++;\n      }\n    }, 300); // return (() => {\n    //     clearTimeout(timeoutID);\n    // })\n  }, [currentWord, text]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: currentWord\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Typewriter, \"4DaGevbO6mrvYA8hBiRXFxU1uHY=\");\n\n_c = Typewriter;\nexport default Typewriter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Typewriter\");","map":{"version":3,"sources":["C:/Users/adria/Documents/coding projects/adriana-portfolio-react/src/components/Typewriter.js"],"names":["React","useState","useEffect","useRef","Typewriter","text","word","i","j","currentWord","setCurrentWord","charIndex","textIndex","isDeleting","setIsDeleting","loop","join","length","push","pop","setTimeout","value","charAt","current"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,MAAIC,IAAI,GAAG,CAAC,eAAD,EAAkB,gBAAlB,EAAoC,aAApC,CAAX;AACA,MAAIC,IAAI,GAAG,EAAX,CAFqB,CAGrB;;AAEA,MAAIC,CAAC,GAAG,CAAR;AACA,MAAIC,CAAC,GAAG,CAAR;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMU,SAAS,GAAGR,MAAM,CAAC,CAAD,CAAxB;AACA,QAAMS,SAAS,GAAGT,MAAM,CAAC,CAAD,CAAxB;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMc,IAAI,GAAG,MAAM;AACfD,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAJ,IAAAA,cAAc,CAACJ,IAAI,CAACU,IAAL,CAAU,EAAV,CAAD,CAAd;;AAEA,QAAIT,CAAC,GAAGF,IAAI,CAACY,MAAb,EAAqB;AACjB;AACA,UAAI,CAACJ,UAAD,IAAeL,CAAC,IAAIH,IAAI,CAACE,CAAD,CAAJ,CAAQU,MAAhC,EAAwC;AACpCX,QAAAA,IAAI,CAACY,IAAL,CAAUb,IAAI,CAACE,CAAD,CAAJ,CAAQC,CAAR,CAAV;AACAA,QAAAA,CAAC;AACDE,QAAAA,cAAc,CAACJ,IAAI,CAACU,IAAL,CAAU,EAAV,CAAD,CAAd;AACH;;AAED,UAAGH,UAAU,IAAIL,CAAC,IAAIH,IAAI,CAACE,CAAD,CAAJ,CAAQU,MAA9B,EAAsC;AAClCX,QAAAA,IAAI,CAACa,GAAL,CAASd,IAAI,CAACE,CAAD,CAAJ,CAAQC,CAAR,CAAT;AACAA,QAAAA,CAAC;AACDE,QAAAA,cAAc,CAACJ,IAAI,CAACU,IAAL,CAAU,EAAV,CAAD,CAAd;AACH;;AAED,UAAIR,CAAC,IAAIF,IAAI,CAACC,CAAD,CAAJ,CAAQU,MAAjB,EAAyB;AACrBH,QAAAA,aAAa,CAAC,IAAD,CAAb;AACH;;AAED,UAAID,UAAU,IAAIL,CAAC,KAAK,CAAxB,EAA2B;AACvBF,QAAAA,IAAI,GAAG,EAAP;AACAQ,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAP,QAAAA,CAAC;AACJ;AACJ;AAEJ,GA7BD;;AA+BAL,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,UAAU,CAAC,MAAM;AACb,UAAIb,CAAC,GAAG,CAAR;AACA,UAAIC,CAAC,GAAG,CAAR;AAEAE,MAAAA,cAAc,CAAEW,KAAD,IAAWA,KAAK,GAAGhB,IAAI,CAACE,CAAD,CAAJ,CAAQe,MAAR,CAAeX,SAAS,CAACY,OAAzB,CAApB,CAAd;AACIZ,MAAAA,SAAS,CAACY,OAAV;;AACA,UAAId,WAAW,KAAK,eAApB,EAAqC;AACjCF,QAAAA,CAAC;AACJ;AACR,KATS,EASP,GATO,CAAV,CADY,CAWZ;AACA;AACA;AACH,GAdQ,EAcN,CAACE,WAAD,EAAcJ,IAAd,CAdM,CAAT;AAiBA,sBACI;AAAA,2BACI;AAAA,gBAAKI;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAnED;;GAAML,U;;KAAAA,U;AAqEN,eAAeA,UAAf","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\n\r\nconst Typewriter = () => {\r\n    let text = ['Web Developer', 'Problem Solver', 'Team Player'];\r\n    let word = []\r\n    // let textIndex = 0;\r\n\r\n    let i = 0;\r\n    let j = 0;\r\n\r\n    const [currentWord, setCurrentWord] = useState('')\r\n    const charIndex = useRef(0);\r\n    const textIndex = useRef(0);\r\n    const [isDeleting, setIsDeleting] = useState(false)\r\n\r\n    const loop = () => {\r\n        setIsDeleting(false);\r\n        setCurrentWord(word.join(''))\r\n\r\n        if (i < text.length) {\r\n            // if we're typing and we haven't completed the word\r\n            if (!isDeleting && j <= text[i].length) {\r\n                word.push(text[i][j]);\r\n                j++;\r\n                setCurrentWord(word.join(''));\r\n            }\r\n\r\n            if(isDeleting && j <= text[i].length) {\r\n                word.pop(text[i][j]);\r\n                j--;\r\n                setCurrentWord(word.join(''));\r\n            }\r\n\r\n            if (j == word[i].length) {\r\n                setIsDeleting(true);\r\n            }\r\n\r\n            if (isDeleting && j === 0) {\r\n                word = [];\r\n                setIsDeleting(false);\r\n                i++;\r\n            }\r\n        }\r\n       \r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            let i = 0;\r\n            let j = 0;\r\n\r\n            setCurrentWord((value) => value + text[i].charAt(charIndex.current));\r\n                charIndex.current++;\r\n                if (currentWord === 'Web Developer') {\r\n                    i++;\r\n                }\r\n        }, 300)\r\n        // return (() => {\r\n        //     clearTimeout(timeoutID);\r\n        // })\r\n    }, [currentWord, text])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3>{currentWord}</h3>\r\n            {/* <h3>hello</h3> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Typewriter\r\n"]},"metadata":{},"sourceType":"module"}