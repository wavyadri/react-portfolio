{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adria\\\\Documents\\\\coding projects\\\\adriana-portfolio-react\\\\src\\\\components\\\\Typewriter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Typewriter = () => {\n  _s();\n\n  let text = ['Web Developer', 'Problem Solver', 'Team Player']; // let textIndex = 0;\n\n  const [currentWord, setCurrentWord] = useState('');\n  const charIndex = useRef(0);\n  const textIndex = useRef(0);\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  const loop = () => {\n    for (let i = 0; i < text.length; i++) {\n      setCurrentWord(value => value + text[i].charAt(charIndex.current));\n      charIndex.current++;\n    }\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      let i = 0;\n      let j = 0;\n      setCurrentWord(value => value + text[i].charAt(charIndex.current));\n      charIndex.current++;\n\n      if (currentWord === 'Web Developer') {\n        i++;\n      }\n    }, 300); // return (() => {\n    //     clearTimeout(timeoutID);\n    // })\n  }, [currentWord, text]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: currentWord\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Typewriter, \"4DaGevbO6mrvYA8hBiRXFxU1uHY=\");\n\n_c = Typewriter;\nexport default Typewriter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Typewriter\");","map":{"version":3,"sources":["C:/Users/adria/Documents/coding projects/adriana-portfolio-react/src/components/Typewriter.js"],"names":["React","useState","useEffect","useRef","Typewriter","text","currentWord","setCurrentWord","charIndex","textIndex","isDeleting","setIsDeleting","loop","i","length","value","charAt","current","setTimeout","j"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,MAAIC,IAAI,GAAG,CAAC,eAAD,EAAkB,gBAAlB,EAAoC,aAApC,CAAX,CADqB,CAErB;;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMO,SAAS,GAAGL,MAAM,CAAC,CAAD,CAAxB;AACA,QAAMM,SAAS,GAAGN,MAAM,CAAC,CAAD,CAAxB;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMW,IAAI,GAAG,MAAM;AACf,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,IAAI,CAACS,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClCN,MAAAA,cAAc,CAAEQ,KAAD,IAAWA,KAAK,GAAGV,IAAI,CAACQ,CAAD,CAAJ,CAAQG,MAAR,CAAeR,SAAS,CAACS,OAAzB,CAApB,CAAd;AACIT,MAAAA,SAAS,CAACS,OAAV;AACP;AACJ,GALD;;AAOAf,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,UAAU,CAAC,MAAM;AACb,UAAIL,CAAC,GAAG,CAAR;AACA,UAAIM,CAAC,GAAG,CAAR;AAEAZ,MAAAA,cAAc,CAAEQ,KAAD,IAAWA,KAAK,GAAGV,IAAI,CAACQ,CAAD,CAAJ,CAAQG,MAAR,CAAeR,SAAS,CAACS,OAAzB,CAApB,CAAd;AACIT,MAAAA,SAAS,CAACS,OAAV;;AACA,UAAIX,WAAW,KAAK,eAApB,EAAqC;AACjCO,QAAAA,CAAC;AACJ;AACR,KATS,EASP,GATO,CAAV,CADY,CAWZ;AACA;AACA;AACH,GAdQ,EAcN,CAACP,WAAD,EAAcD,IAAd,CAdM,CAAT;AAiBA,sBACI;AAAA,2BACI;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAvCD;;GAAMF,U;;KAAAA,U;AAyCN,eAAeA,UAAf","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\n\r\nconst Typewriter = () => {\r\n    let text = ['Web Developer', 'Problem Solver', 'Team Player'];\r\n    // let textIndex = 0;\r\n\r\n    const [currentWord, setCurrentWord] = useState('')\r\n    const charIndex = useRef(0);\r\n    const textIndex = useRef(0);\r\n    const [isDeleting, setIsDeleting] = useState(false)\r\n\r\n    const loop = () => {\r\n        for (let i = 0; i < text.length; i++) {\r\n            setCurrentWord((value) => value + text[i].charAt(charIndex.current));\r\n                charIndex.current++;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            let i = 0;\r\n            let j = 0;\r\n\r\n            setCurrentWord((value) => value + text[i].charAt(charIndex.current));\r\n                charIndex.current++;\r\n                if (currentWord === 'Web Developer') {\r\n                    i++;\r\n                }\r\n        }, 300)\r\n        // return (() => {\r\n        //     clearTimeout(timeoutID);\r\n        // })\r\n    }, [currentWord, text])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3>{currentWord}</h3>\r\n            {/* <h3>hello</h3> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Typewriter\r\n"]},"metadata":{},"sourceType":"module"}